{"version":3,"sources":["../../src/ng4-table.component.ts"],"names":[],"mappings":"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","file":"ng4-table.component.js","sourceRoot":"","sourcesContent":["import { Component, Input, OnInit, OnChanges, SimpleChanges } from '@angular/core';\r\n\r\n\r\n\r\nexport class Ng4Table implements OnInit, OnChanges {\r\n     data: any[] = [{ id: 1, name: \"Gary\", lastname: \"Suarez\"},\r\n                                { id: 2, name: \"Luis\", lastname: \"Suarez\"},\r\n                                { id: 3, name: \"Favio\", lastname: \"Massarini\"},\r\n                                { id: 4, name: \"Emma\", lastname: \"Alvea\"},\r\n                                { id: 5, name: \"Gary\", lastname: \"Suarez\"},\r\n                                { id: 6, name: \"Luis\", lastname: \"Suarez\"},\r\n                                { id: 7, name: \"Emma\", lastname: \"Alvea\"},\r\n                                { id: 8, name: \"Favio\", lastname: \"Massarini\"},\r\n                                { id: 9, name: \"Gary\", lastname: \"Suarez\"},\r\n                                { id: 10, name: \"Emma\", lastname: \"Alvea\"},\r\n                                { id: 11, name: \"Luis\", lastname: \"Suarez\"},\r\n                                { id: 12, name: \"Favio\", lastname: \"Massarini\"}\r\n                            ];\r\n    //@Input() data: Object[] = [];\r\n     options: any;\r\n    showOptions: Object = {};\r\n    //Table Fill variables\r\n    tableHeaders: string[];\r\n    //Pagination Properties\r\n    paginationPrevious : boolean = false;\r\n    paginationNext : boolean = true;\r\n    rowNumber: string = \"10\";\r\n    IsPagination : Boolean = false;\r\n    PaginationArray : any = [];\r\n    CurrentPage : number = 1;\r\n    //Pagination Filter\r\n    firstElement : number = 0;\r\n    lastElement : number;\r\n    //Sorting Properties\r\n    sortedElement : string = \"name\";\r\n    sortedWay: number = 1;\r\n    //General Filter Properties\r\n    filterInput: string;\r\n\r\n    constructor() {\r\n        this.getHeaders();\r\n        this.verifyIfPagination();\r\n        this.generatePaginationArray();\r\n        this.updatePreviousNext();\r\n        this.updateLastElement();\r\n    }\r\n\r\n    ngOnInit() { }\r\n\r\n    ngOnChanges(changes: SimpleChanges) {\r\n        // changes.prop contains the old and the new value...\r\n        this.getHeaders();\r\n        this.verifyIfPagination();\r\n        this.generatePaginationArray();\r\n        this.resetPage();\r\n    }\r\n\r\n    changeRowNumber(){\r\n        this.verifyIfPagination();\r\n        this.generatePaginationArray();\r\n        this.resetPage();\r\n    }\r\n\r\n    //Methods for Pagination\r\n    verifyIfPagination(){\r\n        this.IsPagination = this.data.length / parseInt(this.rowNumber) > 1; \r\n    }\r\n\r\n    generatePaginationArray(){\r\n        let PagesNumber = Math.floor(this.data.length / parseInt(this.rowNumber));\r\n        if(this.data.length % parseInt(this.rowNumber)){\r\n            PagesNumber = PagesNumber + 1;\r\n        }\r\n        this.PaginationArray = Array(PagesNumber).fill(0).map((x,i)=>i + 1);\r\n    }\r\n\r\n    changePage( pageNumber : number ){\r\n        this.CurrentPage = pageNumber;\r\n        this.updatePreviousNext();\r\n        this.updateFirstElement();\r\n        this.updateLastElement();\r\n        \r\n    }\r\n\r\n    resetPage(){\r\n        this.CurrentPage = 1;\r\n        this.updatePreviousNext();\r\n        this.updateFirstElement();\r\n        this.updateLastElement();\r\n    }\r\n\r\n    //Pagination active buttons\r\n    updatePreviousNext(){\r\n        if(this.CurrentPage == 1)\r\n            this.paginationPrevious = false;\r\n        else\r\n            this.paginationPrevious = true;\r\n        \r\n        if(this.CurrentPage == this.PaginationArray[this.PaginationArray.length - 1])\r\n            this.paginationNext = false;\r\n        else\r\n            this.paginationNext = true;\r\n    }\r\n\r\n    //Update the array filter\r\n    updateFirstElement(){\r\n        this.firstElement = (this.CurrentPage - 1) * parseInt(this.rowNumber);\r\n    }\r\n\r\n    updateLastElement() {\r\n        let dataLenght = this.data.length;\r\n        let initial: number = (this.CurrentPage - 1) * parseInt(this.rowNumber);\r\n\r\n        if(this.paginationNext)\r\n            this.lastElement = initial + parseInt(this.rowNumber);\r\n        else\r\n            this.lastElement = initial + dataLenght % parseInt(this.rowNumber) + 1;\r\n    }\r\n    \r\n    // Fill the Table\r\n    getHeaders(){\r\n        //The component can obtain table headers by the options input attribute (options.headers) or by the Data Array\r\n        if(this.options && this.options.headers){\r\n            this.tableHeaders = this.options.headers;\r\n        } else {\r\n            this.tableHeaders = Object.keys(this.data[0]);\r\n        }\r\n    }\r\n\r\n    // Sort Table\r\n    sortTable( element: string ){\r\n        var way: number;\r\n        if(this.sortedElement == element)\r\n            this.sortedWay = this.sortedWay * -1;\r\n        else\r\n            this.sortedWay = 1;\r\n        way = this.sortedWay;            \r\n        if(!this.sortedElement || this.sortedElement != element )\r\n            this.sortedElement = element;\r\n\r\n        this.data.sort(function(a: any, b: any){\r\n            if(a[element] < b[element]) return (-1 * way);\r\n            if(a[element] > b[element]) return (1 * way);\r\n            return 0;\r\n        });\r\n\r\n        this.data = this.data.slice();\r\n    }\r\nstatic decorators: DecoratorInvocation[] = [\n{ type: Component, args: [{\r\n    selector: 'ng-table',\r\n    templateUrl: './ng4-table.component.html'\r\n}, ] },\n];\n/** @nocollapse */\nstatic ctorParameters: () => ({type: any, decorators?: DecoratorInvocation[]}|null)[] = () => [\n];\nstatic propDecorators: {[key: string]: DecoratorInvocation[]} = {\n'data': [{ type: Input },],\n'options': [{ type: Input },],\n};\n}\r\n\ninterface DecoratorInvocation {\n  type: Function;\n  args?: any[];\n}\n"]}