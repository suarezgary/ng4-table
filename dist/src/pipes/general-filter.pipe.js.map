{"version":3,"sources":["../../../src/pipes/general-filter.pipe.ts"],"names":[],"mappings":"AAAA,OAAO,EAAE,IAAA,EAAoB,MAAO,eAAA,CAAgB;AACpD;;;;;;;;;EASE;AAEF;IAAA;IAsBA,CAAC;IArBC,qCAAS,GAAT,UAAU,SAAgB,EAAE,IAAY,EAAE,MAAgB;QACpD,EAAE,CAAA,CAAC,CAAC,IAAI,CAAC;YACL,MAAM,CAAC,SAAS,CAAC;QAErB,MAAM,CAAC,SAAS,CAAC,MAAM,CAAC,UAAC,OAAO;YAC5B,IAAI,IAAI,GAAG,MAAM,CAAC,IAAI,CAAC,OAAO,CAAC,CAAC;YAChC,IAAI,MAAM,GAAG,KAAK,CAAC;YACnB,IAAI,CAAC,OAAO,CAAE,UAAA,IAAI;gBACd,IAAI,GAAG,GAAW,OAAO,CAAC,IAAI,CAAC,CAAC;gBAChC,EAAE,CAAA,CAAC,GAAG,CAAC,QAAQ,EAAE,CAAC,WAAW,EAAE,CAAC,QAAQ,CAAC,IAAI,CAAC,WAAW,EAAE,CAAC,CAAC;oBACzD,MAAM,GAAG,IAAI,CAAC;YACtB,CAAC,CAAC,CAAC;YACH,MAAM,CAAC,MAAM,CAAC;QAClB,CAAC,CAAC,CAAC;IACT,CAAC;IACI,4BAAU,GAA0B;QAC3C,EAAE,IAAI,EAAE,IAAI,EAAE,IAAI,EAAE,CAAC,EAAC,IAAI,EAAE,eAAe,EAAC,EAAG,EAAE;KAChD,CAAC;IACF,kBAAkB;IACX,gCAAc,GAAmE,cAAM,OAAA,EAC7F,EAD6F,CAC7F,CAAC;IACF,wBAAC;CAtBD,AAsBC,IAAA;SAtBY,iBAAiB","file":"general-filter.pipe.js","sourceRoot":"","sourcesContent":["import { Pipe, PipeTransform } from '@angular/core';\r\n/*\r\n * General Filter Pipe\r\n * Takes two argument, the info to use and parameters to filter\r\n * Usage:\r\n *   ObjectArray | generalFilter:\"hi\":['id','name','surname']\r\n * Example:\r\n *   {{ [{},{},{}] |  generalFilter:info:filterArray}}\r\n * result:\r\n *  [{},{}]\r\n*/\r\n\r\nexport class GeneralFilterPipe implements PipeTransform {\r\n  transform(dataArray: any[], info: string, params: string[] ): any[] { \r\n        if(!info)\r\n            return dataArray;\r\n        \r\n        return dataArray.filter((element) =>{\r\n            let keys = Object.keys(element);\r\n            let toShow = false;\r\n            keys.forEach( elem => {\r\n                let str: String = element[elem];\r\n                if(str.toString().toLowerCase().includes(info.toLowerCase()))\r\n                    toShow = true;\r\n            });\r\n            return toShow;\r\n        });\r\n  }\r\nstatic decorators: DecoratorInvocation[] = [\n{ type: Pipe, args: [{name: 'generalFilter'}, ] },\n];\n/** @nocollapse */\nstatic ctorParameters: () => ({type: any, decorators?: DecoratorInvocation[]}|null)[] = () => [\n];\n}\ninterface DecoratorInvocation {\n  type: Function;\n  args?: any[];\n}\n"]}